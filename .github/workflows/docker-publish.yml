name: Docker Image CI

permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - 'master' # 또는 프로젝트의 기본 브랜치 (예: 'main')
  workflow_dispatch: # 수동 실행 허용

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags and labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }} # 이미지 이름을 frontend 없이 기본으로 사용하거나, 필요시 /frontend 추가
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
            type=sha,format=short

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha,scope=${{ github.workflow }} # GitHub Actions 캐시 사용
          cache-to: type=gha,mode=max,scope=${{ github.workflow }} # GitHub Actions 캐시 사용
          provenance: true # SLSA provenance 증명 생성 (권장)
          sbom: true # SBOM 증명 생성 (권장)
          build-args: |
            VITE_BACKEND_URL_ARG=${{ secrets.VITE_BACKEND_URL }}
            VITE_NAVER_CLIENT_ID_ARG=${{ secrets.VITE_NAVER_CLIENT_ID }}
            VITE_NAVER_REDIRECT_URI_ARG=${{ secrets.VITE_NAVER_REDIRECT_URI}}
