services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    image: droni-react-frontend # 생성될 이미지 이름
    container_name: droni-react-frontend-app # 실행될 컨테이너 이름
    restart: unless-stopped # 컨테이너 비정상 종료 시 재시작 (수동 정지 제외)
    networks:
      - traefik_network # Traefik 프록시 네트워크에 연결
    labels:
      # Traefik 통합 활성화
      - 'traefik.enable=true'

      # --- HTTP 라우터 설정 ---
      # 이 라우터의 이름을 'droni-react-frontend-http-router'로 지정합니다.
      - 'traefik.http.routers.droni-react-frontend-http-router.rule=Host(`39.115.66.158`) && PathPrefix(`/droni`)'
      - 'traefik.http.routers.droni-react-frontend-http-router.entrypoints=web'
      # 이 라우터가 사용할 Traefik 서비스 이름을 'droni-react-frontend-svc'로 지정합니다.
      - 'traefik.http.routers.droni-react-frontend-http-router.service=droni-react-frontend-svc'

      # --- HTTPS 라우터 설정 (예시) ---
      # Traefik을 통해 HTTPS 및 SSL 인증서 관리를 하려면 아래 주석을 해제하고 설정을 완료하세요.
      # - 'traefik.http.routers.droni-react-frontend-https-router.rule=Host(`your-domain.com`)' # 실제 도메인으로 변경
      # - 'traefik.http.routers.droni-react-frontend-https-router.entrypoints=websecure'
      # - 'traefik.http.routers.droni-react-frontend-https-router.tls=true'
      # - 'traefik.http.routers.droni-react-frontend-https-router.tls.certresolver=myresolver' # Traefik에 설정된 인증서 해석기 이름
      # - 'traefik.http.routers.droni-react-frontend-https-router.service=droni-react-frontend-svc' # HTTP와 동일한 Traefik 서비스 사용

      # --- Traefik 서비스 설정 ---
      # 'droni-react-frontend-svc'라는 이름의 Traefik 서비스를 정의합니다.
      # 이 서비스는 이 Docker Compose 서비스('frontend') 내부의 Nginx 8080번 포트로 트래픽을 전달합니다.
      - 'traefik.http.services.droni-react-frontend-svc.loadbalancer.server.port=8080'

      # --- 미들웨어 설정 (선택 사항 예시) ---
      # HTTP를 HTTPS로 리디렉션하려면 Traefik에 'redirect-to-https' 미들웨어가 정의되어 있어야 합니다.
      # - "traefik.http.routers.droni-react-frontend-http-router.middlewares=redirect-to-https@docker"
      #
      # 사용자 정의 헤더를 추가하려면 Traefik에 해당 미들웨어가 정의되어 있어야 합니다.
      # - "traefik.http.routers.droni-react-frontend-https-router.middlewares=my-default-headers@docker"

networks:
  traefik_network:
    external: true # 이미 생성된 외부 네트워크 사용
