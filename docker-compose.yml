version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    image: droni-react-frontend # 생성될 이미지 이름
    container_name: droni-react-frontend-app # 실행될 컨테이너 이름
    restart: unless-stopped # 컨테이너 비정상 종료 시 재시작 (수동 정지 제외)
    networks:
      - traefik_network # Traefik 프록시 네트워크에 연결
    labels:
      # Traefik 통합 활성화
      - 'traefik.enable=true'

      # --- HTTP 라우터 설정 (예시) ---
      # 도메인 기반 라우팅을 사용하려면 아래 주석을 해제하고 'your-domain.com'을 실제 도메인으로 변경하세요.
      # - 'traefik.http.routers.frontend-http.rule=Host(`your-domain.com`)'
      # - 'traefik.http.routers.frontend-http.entrypoints=web' # Traefik의 HTTP entrypoint (기본: web)

      # --- HTTPS 라우터 설정 (예시) ---
      # Traefik을 통해 HTTPS 및 SSL 인증서 관리를 하려면 아래 주석을 해제하세요.
      # - 'traefik.http.routers.frontend-https.rule=Host(`your-domain.com`)'
      # - 'traefik.http.routers.frontend-https.entrypoints=websecure' # Traefik의 HTTPS entrypoint (기본: websecure)
      # - 'traefik.http.routers.frontend-https.tls=true' # TLS 활성화
      # - 'traefik.http.routers.frontend-https.tls.certresolver=myresolver' # Traefik에 설정된 인증서 리졸버 이름

      # --- 서비스 포트 설정 ---
      # Traefik이 frontend 서비스(Nginx)의 80번 포트로 트래픽을 전달하도록 설정
      - 'traefik.http.services.frontend-service.loadbalancer.server.port=80'

      # --- 미들웨어 설정 (선택 사항 예시) ---
      # HTTP를 HTTPS로 리디렉션하려면 Traefik에 'redirect-to-https' 미들웨어가 정의되어 있어야 합니다.
      # - "traefik.http.routers.frontend-http.middlewares=redirect-to-https@docker"
      #
      # 사용자 정의 헤더를 추가하려면 Traefik에 해당 미들웨어가 정의되어 있어야 합니다.
      # - "traefik.http.routers.frontend-https.middlewares=my-default-headers@docker"

networks:
  traefik_network:
    external: true # 이미 생성된 외부 네트워크 사용
