/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MypageIndexRouteImport } from './routes/mypage/index'
import { Route as MypageSettingsRouteImport } from './routes/mypage/settings'
import { Route as DashboardUserRouteImport } from './routes/dashboard.user'
import { Route as AuthNaverCallbackRouteImport } from './routes/auth/naver/callback'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MypageIndexRoute = MypageIndexRouteImport.update({
  id: '/mypage/',
  path: '/mypage/',
  getParentRoute: () => rootRouteImport,
} as any)
const MypageSettingsRoute = MypageSettingsRouteImport.update({
  id: '/mypage/settings',
  path: '/mypage/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardUserRoute = DashboardUserRouteImport.update({
  id: '/dashboard/user',
  path: '/dashboard/user',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthNaverCallbackRoute = AuthNaverCallbackRouteImport.update({
  id: '/auth/naver/callback',
  path: '/auth/naver/callback',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard/user': typeof DashboardUserRoute
  '/mypage/settings': typeof MypageSettingsRoute
  '/mypage': typeof MypageIndexRoute
  '/auth/naver/callback': typeof AuthNaverCallbackRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard/user': typeof DashboardUserRoute
  '/mypage/settings': typeof MypageSettingsRoute
  '/mypage': typeof MypageIndexRoute
  '/auth/naver/callback': typeof AuthNaverCallbackRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard/user': typeof DashboardUserRoute
  '/mypage/settings': typeof MypageSettingsRoute
  '/mypage/': typeof MypageIndexRoute
  '/auth/naver/callback': typeof AuthNaverCallbackRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/dashboard/user'
    | '/mypage/settings'
    | '/mypage'
    | '/auth/naver/callback'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/dashboard/user'
    | '/mypage/settings'
    | '/mypage'
    | '/auth/naver/callback'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/dashboard/user'
    | '/mypage/settings'
    | '/mypage/'
    | '/auth/naver/callback'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  DashboardUserRoute: typeof DashboardUserRoute
  MypageSettingsRoute: typeof MypageSettingsRoute
  MypageIndexRoute: typeof MypageIndexRoute
  AuthNaverCallbackRoute: typeof AuthNaverCallbackRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mypage/': {
      id: '/mypage/'
      path: '/mypage'
      fullPath: '/mypage'
      preLoaderRoute: typeof MypageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mypage/settings': {
      id: '/mypage/settings'
      path: '/mypage/settings'
      fullPath: '/mypage/settings'
      preLoaderRoute: typeof MypageSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/user': {
      id: '/dashboard/user'
      path: '/dashboard/user'
      fullPath: '/dashboard/user'
      preLoaderRoute: typeof DashboardUserRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/naver/callback': {
      id: '/auth/naver/callback'
      path: '/auth/naver/callback'
      fullPath: '/auth/naver/callback'
      preLoaderRoute: typeof AuthNaverCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  DashboardUserRoute: DashboardUserRoute,
  MypageSettingsRoute: MypageSettingsRoute,
  MypageIndexRoute: MypageIndexRoute,
  AuthNaverCallbackRoute: AuthNaverCallbackRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
